/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

buildscript {
    repositories {
        gradle.mozconfig.substs.GRADLE_MAVEN_REPOSITORIES.each { repository ->
            maven {
                url repository
                if (gradle.mozconfig.substs.ALLOW_INSECURE_GRADLE_REPOSITORIES) {
                    allowInsecureProtocol = true
                }
            }
        }
    }

    dependencies {
        classpath libs.glean.gradle.plugin
        classpath libs.plugin.serialization
    }
}

plugins {
    id "com.jetbrains.python.envs" version "$python_envs_plugin"
}

apply plugin: 'com.android.library'
apply plugin: 'com.google.devtools.ksp'
apply plugin: 'kotlin-android'
apply plugin: 'kotlinx-serialization'

android {
    defaultConfig {
        minSdkVersion config.minSdkVersion
        compileSdk config.compileSdkVersion
        targetSdkVersion config.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.incremental": "true"]
            }
        }
    }

    ksp {
        arg("room.schemaLocation", "$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    namespace 'mozilla.components.lib.crash'
}

dependencies {
    implementation libs.kotlin.coroutines
    implementation libs.kotlin.json

    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.core.ktx
    implementation libs.androidx.recyclerview

    implementation project(':support-base')
    implementation project(':support-ktx')
    implementation project(':support-utils')

    implementation libs.androidx.room.runtime
    ksp libs.androidx.room.compiler

    // We only compile against GeckoView and Glean. It's up to the app to add those dependencies if it wants to
    // send crash reports to Socorro (GV).
    compileOnly libs.mozilla.glean
    testImplementation libs.mozilla.glean
    testImplementation libs.androidx.work.testing

    testImplementation project(':support-test')
    testImplementation libs.androidx.test.core
    testImplementation libs.androidx.test.junit
    testImplementation libs.testing.robolectric
    testImplementation libs.testing.coroutines
    testImplementation libs.testing.mockwebserver
    testImplementation libs.mozilla.glean.forUnitTests
}

ext {
    gleanNamespace = "mozilla.telemetry.glean"
    gleanPythonEnvDir = gradle.mozconfig.substs.GRADLE_GLEAN_PARSER_VENV
}
apply plugin: "org.mozilla.telemetry.glean-gradle-plugin"
apply from: '../../../android-lint.gradle'
apply from: '../../../publish.gradle'
ext.configurePublish(config.componentsGroupId, project.name, project.ext.description)
